const isPreviewableImage=e=>/^image/.test(e.type),vectorMultiply=(e,t)=>createVector(e.x*t,e.y*t),vectorAdd=(e,t)=>createVector(e.x+t.x,e.y+t.y),vectorNormalize=e=>{const t=Math.sqrt(e.x*e.x+e.y*e.y);return 0===t?{x:0,y:0}:createVector(e.x/t,e.y/t)},vectorRotate=(e,t,r)=>{const a=Math.cos(t),i=Math.sin(t),o=createVector(e.x-r.x,e.y-r.y);return createVector(r.x+a*o.x-i*o.y,r.y+i*o.x+a*o.y)},createVector=(e=0,t=0)=>({x:e,y:t}),getMarkupValue=(e,t,r=1,a)=>"string"==typeof e?parseFloat(e)*r:"number"==typeof e?e*(a?t[a]:Math.min(t.width,t.height)):void 0,getMarkupStyles=(e,t,r)=>{const a=e.borderStyle||e.lineStyle||"solid",i=e.backgroundColor||e.fontColor||"transparent",o=e.borderColor||e.lineColor||"transparent",n=getMarkupValue(e.borderWidth||e.lineWidth,t,r);return{"stroke-linecap":e.lineCap||"round","stroke-linejoin":e.lineJoin||"round","stroke-width":n||0,"stroke-dasharray":"string"==typeof a?"":a.map((e=>getMarkupValue(e,t,r))).join(","),stroke:o,fill:i,opacity:e.opacity||1}},isDefined=e=>null!=e,getMarkupRect=(e,t,r=1)=>{let a=getMarkupValue(e.x,t,r,"width")||getMarkupValue(e.left,t,r,"width"),i=getMarkupValue(e.y,t,r,"height")||getMarkupValue(e.top,t,r,"height"),o=getMarkupValue(e.width,t,r,"width"),n=getMarkupValue(e.height,t,r,"height"),s=getMarkupValue(e.right,t,r,"width"),c=getMarkupValue(e.bottom,t,r,"height");return isDefined(i)||(i=isDefined(n)&&isDefined(c)?t.height-n-c:c),isDefined(a)||(a=isDefined(o)&&isDefined(s)?t.width-o-s:s),isDefined(o)||(o=isDefined(a)&&isDefined(s)?t.width-a-s:0),isDefined(n)||(n=isDefined(i)&&isDefined(c)?t.height-i-c:0),{x:a||0,y:i||0,width:o||0,height:n||0}},pointsToPathShape=e=>e.map(((e,t)=>`${0===t?"M":"L"} ${e.x} ${e.y}`)).join(" "),setAttributes=(e,t)=>Object.keys(t).forEach((r=>e.setAttribute(r,t[r]))),ns="http://www.w3.org/2000/svg",svg=(e,t)=>{const r=document.createElementNS(ns,e);return t&&setAttributes(r,t),r},updateRect=e=>setAttributes(e,{...e.rect,...e.styles}),updateEllipse=e=>{const t=e.rect.x+.5*e.rect.width,r=e.rect.y+.5*e.rect.height,a=.5*e.rect.width,i=.5*e.rect.height;return setAttributes(e,{cx:t,cy:r,rx:a,ry:i,...e.styles})},IMAGE_FIT_STYLE={contain:"xMidYMid meet",cover:"xMidYMid slice"},updateImage=(e,t)=>{setAttributes(e,{...e.rect,...e.styles,preserveAspectRatio:IMAGE_FIT_STYLE[t.fit]||"none"})},TEXT_ANCHOR={left:"start",center:"middle",right:"end"},updateText=(e,t,r,a)=>{const i=getMarkupValue(t.fontSize,r,a),o=t.fontFamily||"sans-serif",n=t.fontWeight||"normal",s=TEXT_ANCHOR[t.textAlign]||"start";setAttributes(e,{...e.rect,...e.styles,"stroke-width":0,"font-weight":n,"font-size":i,"font-family":o,"text-anchor":s}),e.text!==t.text&&(e.text=t.text,e.textContent=t.text.length?t.text:" ")},updateLine=(e,t,r,a)=>{setAttributes(e,{...e.rect,...e.styles,fill:"none"});const i=e.childNodes[0],o=e.childNodes[1],n=e.childNodes[2],s=e.rect,c={x:e.rect.x+e.rect.width,y:e.rect.y+e.rect.height};if(setAttributes(i,{x1:s.x,y1:s.y,x2:c.x,y2:c.y}),!t.lineDecoration)return;o.style.display="none",n.style.display="none";const l=vectorNormalize({x:c.x-s.x,y:c.y-s.y}),d=getMarkupValue(.05,r,a);if(-1!==t.lineDecoration.indexOf("arrow-begin")){const e=vectorMultiply(l,d),t=vectorAdd(s,e),r=vectorRotate(s,2,t),a=vectorRotate(s,-2,t);setAttributes(o,{style:"display:block;",d:`M${r.x},${r.y} L${s.x},${s.y} L${a.x},${a.y}`})}if(-1!==t.lineDecoration.indexOf("arrow-end")){const e=vectorMultiply(l,-d),t=vectorAdd(c,e),r=vectorRotate(c,2,t),a=vectorRotate(c,-2,t);setAttributes(n,{style:"display:block;",d:`M${r.x},${r.y} L${c.x},${c.y} L${a.x},${a.y}`})}},updatePath=(e,t,r,a)=>{var i;setAttributes(e,{...e.styles,fill:"none",d:(i=t.points.map((e=>({x:getMarkupValue(e.x,r,a,"width"),y:getMarkupValue(e.y,r,a,"height")}))),i.map(((e,t)=>`${0===t?"M":"L"} ${e.x} ${e.y}`)).join(" "))})},createShape=e=>t=>svg(e,{id:t.id}),createImage=e=>{const t=svg("image",{id:e.id,"stroke-linecap":"round","stroke-linejoin":"round",opacity:"0"});return t.onload=()=>{t.setAttribute("opacity",e.opacity||1)},t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",e.src),t},createLine=e=>{const t=svg("g",{id:e.id,"stroke-linecap":"round","stroke-linejoin":"round"}),r=svg("line");t.appendChild(r);const a=svg("path");t.appendChild(a);const i=svg("path");return t.appendChild(i),t},CREATE_TYPE_ROUTES={image:createImage,rect:createShape("rect"),ellipse:createShape("ellipse"),text:createShape("text"),path:createShape("path"),line:createLine},UPDATE_TYPE_ROUTES={rect:updateRect,ellipse:updateEllipse,image:updateImage,text:updateText,path:updatePath,line:updateLine},createMarkupByType=(e,t)=>CREATE_TYPE_ROUTES[e](t),updateMarkupByType=(e,t,r,a,i)=>{"path"!==t&&(e.rect=getMarkupRect(r,a,i)),e.styles=getMarkupStyles(r,a,i),UPDATE_TYPE_ROUTES[t](e,r,a,i)},MARKUP_RECT=["x","y","left","top","right","bottom","width","height"],toOptionalFraction=e=>"string"==typeof e&&/%/.test(e)?parseFloat(e)/100:e,prepareMarkup=e=>{const[t,r]=e,a=r.points?{}:MARKUP_RECT.reduce(((e,t)=>{var a;return e[t]="string"==typeof(a=r[t])&&/%/.test(a)?parseFloat(a)/100:a,e}),{});return[t,{zIndex:0,...r,...a}]},sortMarkupByZIndex=(e,t)=>e[1].zIndex>t[1].zIndex?1:e[1].zIndex<t[1].zIndex?-1:0,createMarkupView=e=>e.utils.createView({name:"image-preview-markup",tag:"svg",ignoreRect:!0,mixins:{apis:["width","height","crop","markup","resize","dirty"]},write:({root:e,props:t})=>{if(!t.dirty)return;const{crop:r,resize:a,markup:i}=t,o=t.width,n=t.height;let s=r.width,c=r.height;if(a){const{size:e}=a;let t=e&&e.width,r=e&&e.height;const i=a.mode,o=a.upscale;t&&!r&&(r=t),r&&!t&&(t=r);const n=s<t&&c<r;if(!n||n&&o){let e=t/s,a=r/c;if("force"===i)s=t,c=r;else{let t;"cover"===i?t=Math.max(e,a):"contain"===i&&(t=Math.min(e,a)),s*=t,c*=t}}}const l={width:o,height:n};e.element.setAttribute("width",l.width),e.element.setAttribute("height",l.height);const d=Math.min(o/s,n/c);e.element.innerHTML="";const h=e.query("GET_IMAGE_PREVIEW_MARKUP_FILTER");i.filter(h).map(prepareMarkup).sort(sortMarkupByZIndex).forEach((t=>{const[r,a]=t,i=createMarkupByType(r,a);updateMarkupByType(i,r,a,l,d),e.element.appendChild(i)}))}}),createVector$1=(e,t)=>({x:e,y:t}),vectorDot=(e,t)=>e.x*t.x+e.y*t.y,vectorSubtract=(e,t)=>createVector$1(e.x-t.x,e.y-t.y),vectorDistanceSquared=(e,t)=>vectorDot(vectorSubtract(e,t),vectorSubtract(e,t)),vectorDistance=(e,t)=>Math.sqrt(vectorDistanceSquared(e,t)),getOffsetPointOnEdge=(e,t)=>{const r=e,a=t,i=1.5707963267948966-t,o=Math.sin(1.5707963267948966),n=Math.sin(a),s=Math.sin(i),c=Math.cos(i),l=r/o;return createVector$1(c*(l*n),c*(l*s))},getRotatedRectSize=(e,t)=>{const r=e.width,a=e.height,i=getOffsetPointOnEdge(r,t),o=getOffsetPointOnEdge(a,t),n=createVector$1(e.x+Math.abs(i.x),e.y-Math.abs(i.y)),s=createVector$1(e.x+e.width+Math.abs(o.y),e.y+Math.abs(o.x)),c=createVector$1(e.x-Math.abs(o.y),e.y+e.height-Math.abs(o.x));return{width:vectorDistance(n,s),height:vectorDistance(n,c)}},calculateCanvasSize=(e,t,r=1)=>{const a=e.height/e.width;let i=t,o=1,n=a;n>i&&(n=i,o=n/a);const s=Math.max(1/o,i/n),c=e.width/(r*s*o);return{width:c,height:c*t}},getImageRectZoomFactor=(e,t,r,a)=>{const i=a.x>.5?1-a.x:a.x,o=a.y>.5?1-a.y:a.y,n=2*i*e.width,s=2*o*e.height,c=getRotatedRectSize(t,r);return Math.max(c.width/n,c.height/s)},getCenteredCropRect=(e,t)=>{let r=e.width,a=r*t;a>e.height&&(a=e.height,r=a/t);return{x:.5*(e.width-r),y:.5*(e.height-a),width:r,height:a}},getCurrentCropSize=(e,t={})=>{let{zoom:r,rotation:a,center:i,aspectRatio:o}=t;o||(o=e.height/e.width);const n=calculateCanvasSize(e,o,r),s={x:.5*n.width,y:.5*n.height},c={x:0,y:0,width:n.width,height:n.height,center:s},l=void 0===t.scaleToFit||t.scaleToFit,d=r*getImageRectZoomFactor(e,getCenteredCropRect(c,o),a,l?i:{x:.5,y:.5});return{widthFloat:n.width/d,heightFloat:n.height/d,width:Math.round(n.width/d),height:Math.round(n.height/d)}},IMAGE_SCALE_SPRING_PROPS={type:"spring",stiffness:.5,damping:.45,mass:10},createBitmapView=e=>e.utils.createView({name:"image-bitmap",ignoreRect:!0,mixins:{styles:["scaleX","scaleY"]},create:({root:e,props:t})=>{e.appendChild(t.image)}}),createImageCanvasWrapper=e=>e.utils.createView({name:"image-canvas-wrapper",tag:"div",ignoreRect:!0,mixins:{apis:["crop","width","height"],styles:["originX","originY","translateX","translateY","scaleX","scaleY","rotateZ"],animations:{originX:IMAGE_SCALE_SPRING_PROPS,originY:IMAGE_SCALE_SPRING_PROPS,scaleX:IMAGE_SCALE_SPRING_PROPS,scaleY:IMAGE_SCALE_SPRING_PROPS,translateX:IMAGE_SCALE_SPRING_PROPS,translateY:IMAGE_SCALE_SPRING_PROPS,rotateZ:IMAGE_SCALE_SPRING_PROPS}},create:({root:t,props:r})=>{r.width=r.image.width,r.height=r.image.height,t.ref.bitmap=t.appendChildView(t.createChildView(createBitmapView(e),{image:r.image}))},write:({root:e,props:t})=>{const{flip:r}=t.crop,{bitmap:a}=e.ref;a.scaleX=r.horizontal?-1:1,a.scaleY=r.vertical?-1:1}}),createClipView=e=>e.utils.createView({name:"image-clip",tag:"div",ignoreRect:!0,mixins:{apis:["crop","markup","resize","width","height","dirty","background"],styles:["width","height","opacity"],animations:{opacity:{type:"tween",duration:250}}},didWriteView:function({root:e,props:t}){t.background&&(e.element.style.backgroundColor=t.background)},create:({root:t,props:r})=>{t.ref.image=t.appendChildView(t.createChildView(createImageCanvasWrapper(e),Object.assign({},r))),t.ref.createMarkup=()=>{t.ref.markup||(t.ref.markup=t.appendChildView(t.createChildView(createMarkupView(e),Object.assign({},r))))},t.ref.destroyMarkup=()=>{t.ref.markup&&(t.removeChildView(t.ref.markup),t.ref.markup=null)};const a=t.query("GET_IMAGE_PREVIEW_TRANSPARENCY_INDICATOR");null!==a&&(t.element.dataset.transparencyIndicator="grid"===a?a:"color")},write:({root:e,props:t,shouldOptimize:r})=>{const{crop:a,markup:i,resize:o,dirty:n,width:s,height:c}=t;e.ref.image.crop=a;const l={x:0,y:0,width:s,height:c,center:{x:.5*s,y:.5*c}},d={width:e.ref.image.width,height:e.ref.image.height},h={x:a.center.x*d.width,y:a.center.y*d.height},p={x:l.center.x-d.width*a.center.x,y:l.center.y-d.height*a.center.y},g=2*Math.PI+a.rotation%(2*Math.PI),u=a.aspectRatio||d.height/d.width,m=void 0===a.scaleToFit||a.scaleToFit,E=getImageRectZoomFactor(d,getCenteredCropRect(l,u),g,m?a.center:{x:.5,y:.5}),_=a.zoom*E;i&&i.length?(e.ref.createMarkup(),e.ref.markup.width=s,e.ref.markup.height=c,e.ref.markup.resize=o,e.ref.markup.dirty=n,e.ref.markup.markup=i,e.ref.markup.crop=getCurrentCropSize(d,a)):e.ref.markup&&e.ref.destroyMarkup();const f=e.ref.image;if(r)return f.originX=null,f.originY=null,f.translateX=null,f.translateY=null,f.rotateZ=null,f.scaleX=null,void(f.scaleY=null);f.originX=h.x,f.originY=h.y,f.translateX=p.x,f.translateY=p.y,f.rotateZ=g,f.scaleX=_,f.scaleY=_}}),createImageView=e=>e.utils.createView({name:"image-preview",tag:"div",ignoreRect:!0,mixins:{apis:["image","crop","markup","resize","dirty","background"],styles:["translateY","scaleX","scaleY","opacity"],animations:{scaleX:IMAGE_SCALE_SPRING_PROPS,scaleY:IMAGE_SCALE_SPRING_PROPS,translateY:IMAGE_SCALE_SPRING_PROPS,opacity:{type:"tween",duration:400}}},create:({root:t,props:r})=>{t.ref.clip=t.appendChildView(t.createChildView(createClipView(e),{id:r.id,image:r.image,crop:r.crop,markup:r.markup,resize:r.resize,dirty:r.dirty,background:r.background}))},write:({root:e,props:t,shouldOptimize:r})=>{const{clip:a}=e.ref,{image:i,crop:o,markup:n,resize:s,dirty:c}=t;if(a.crop=o,a.markup=n,a.resize=s,a.dirty=c,a.opacity=r?0:1,r||e.rect.element.hidden)return;const l=i.height/i.width;let d=o.aspectRatio||l;const h=e.rect.inner.width,p=e.rect.inner.height;let g=e.query("GET_IMAGE_PREVIEW_HEIGHT");const u=e.query("GET_IMAGE_PREVIEW_MIN_HEIGHT"),m=e.query("GET_IMAGE_PREVIEW_MAX_HEIGHT"),E=e.query("GET_PANEL_ASPECT_RATIO"),_=e.query("GET_ALLOW_MULTIPLE");E&&!_&&(g=h*E,d=E);let f=null!==g?g:Math.max(u,Math.min(h*d,m)),I=f/d;I>h&&(I=h,f=I*d),f>p&&(f=p,I=p/d),a.width=I,a.height=f}});let SVG_MASK='<svg width="500" height="200" viewBox="0 0 500 200" preserveAspectRatio="none">\n    <defs>\n        <radialGradient id="gradient-__UID__" cx=".5" cy="1.25" r="1.15">\n            <stop offset=\'50%\' stop-color=\'#000000\'/>\n            <stop offset=\'56%\' stop-color=\'#0a0a0a\'/>\n            <stop offset=\'63%\' stop-color=\'#262626\'/>\n            <stop offset=\'69%\' stop-color=\'#4f4f4f\'/>\n            <stop offset=\'75%\' stop-color=\'#808080\'/>\n            <stop offset=\'81%\' stop-color=\'#b1b1b1\'/>\n            <stop offset=\'88%\' stop-color=\'#dadada\'/>\n            <stop offset=\'94%\' stop-color=\'#f6f6f6\'/>\n            <stop offset=\'100%\' stop-color=\'#ffffff\'/>\n        </radialGradient>\n        <mask id="mask-__UID__">\n            <rect x="0" y="0" width="500" height="200" fill="url(#gradient-__UID__)"></rect>\n        </mask>\n    </defs>\n    <rect x="0" width="500" height="200" fill="currentColor" mask="url(#mask-__UID__)"></rect>\n</svg>',SVGMaskUniqueId=0;const createImageOverlayView=e=>e.utils.createView({name:"image-preview-overlay",tag:"div",ignoreRect:!0,create:({root:e,props:t})=>{let r=SVG_MASK;if(document.querySelector("base")){const e=new URL(window.location.href.replace(window.location.hash,"")).href;r=r.replace(/url\(\#/g,"url("+e+"#")}SVGMaskUniqueId++,e.element.classList.add(`filepond--image-preview-overlay-${t.status}`),e.element.innerHTML=r.replace(/__UID__/g,SVGMaskUniqueId)},mixins:{styles:["opacity"],animations:{opacity:{type:"spring",mass:25}}}}),BitmapWorker=function(){self.onmessage=e=>{createImageBitmap(e.data.message.file).then((t=>{self.postMessage({id:e.data.id,message:t},[t])}))}},ColorMatrixWorker=function(){self.onmessage=e=>{const t=e.data.message.imageData,r=e.data.message.colorMatrix,a=t.data,i=a.length,o=r[0],n=r[1],s=r[2],c=r[3],l=r[4],d=r[5],h=r[6],p=r[7],g=r[8],u=r[9],m=r[10],E=r[11],_=r[12],f=r[13],I=r[14],y=r[15],w=r[16],M=r[17],A=r[18],R=r[19];let T=0,x=0,v=0,P=0,C=0;for(;T<i;T+=4)x=a[T]/255,v=a[T+1]/255,P=a[T+2]/255,C=a[T+3]/255,a[T]=Math.max(0,Math.min(255*(x*o+v*n+P*s+C*c+l),255)),a[T+1]=Math.max(0,Math.min(255*(x*d+v*h+P*p+C*g+u),255)),a[T+2]=Math.max(0,Math.min(255*(x*m+v*E+P*_+C*f+I),255)),a[T+3]=Math.max(0,Math.min(255*(x*y+v*w+P*M+C*A+R),255));self.postMessage({id:e.data.id,message:t},[t.data.buffer])}},getImageSize=(e,t)=>{let r=new Image;r.onload=()=>{const e=r.naturalWidth,a=r.naturalHeight;r=null,t(e,a)},r.src=e},transforms={1:()=>[1,0,0,1,0,0],2:e=>[-1,0,0,1,e,0],3:(e,t)=>[-1,0,0,-1,e,t],4:(e,t)=>[1,0,0,-1,0,t],5:()=>[0,1,1,0,0,0],6:(e,t)=>[0,1,-1,0,t,0],7:(e,t)=>[0,-1,-1,0,t,e],8:e=>[0,-1,1,0,0,e]},fixImageOrientation=(e,t,r,a)=>{-1!==a&&e.transform.apply(e,transforms[a](t,r))},createPreviewImage=(e,t,r,a)=>{t=Math.round(t),r=Math.round(r);const i=document.createElement("canvas");i.width=t,i.height=r;const o=i.getContext("2d");return a>=5&&a<=8&&([t,r]=[r,t]),fixImageOrientation(o,t,r,a),o.drawImage(e,0,0,t,r),i},isBitmap=e=>/^image/.test(e.type)&&!/svg/.test(e.type),MAX_WIDTH=10,MAX_HEIGHT=10,calculateAverageColor=e=>{const t=Math.min(10/e.width,10/e.height),r=document.createElement("canvas"),a=r.getContext("2d"),i=r.width=Math.ceil(e.width*t),o=r.height=Math.ceil(e.height*t);a.drawImage(e,0,0,i,o);let n=null;try{n=a.getImageData(0,0,i,o).data}catch(e){return null}const s=n.length;let c=0,l=0,d=0,h=0;for(;h<s;h+=4)c+=n[h]*n[h],l+=n[h+1]*n[h+1],d+=n[h+2]*n[h+2];return c=averageColor(c,s),l=averageColor(l,s),d=averageColor(d,s),{r:c,g:l,b:d}},averageColor=(e,t)=>Math.floor(Math.sqrt(e/(t/4))),cloneCanvas=(e,t)=>{(t=t||document.createElement("canvas")).width=e.width,t.height=e.height;return t.getContext("2d").drawImage(e,0,0),t},cloneImageData=e=>{let t;try{t=new ImageData(e.width,e.height)}catch(r){t=document.createElement("canvas").getContext("2d").createImageData(e.width,e.height)}return t.data.set(new Uint8ClampedArray(e.data)),t},loadImage=e=>new Promise(((t,r)=>{const a=new Image;a.crossOrigin="Anonymous",a.onload=()=>{t(a)},a.onerror=e=>{r(e)},a.src=e})),createImageWrapperView=e=>{const t=e.utils.createView({name:"image-preview-overlay",tag:"div",ignoreRect:!0,create:({root:e,props:t})=>{let r=SVG_MASK;if(document.querySelector("base")){const e=new URL(window.location.href.replace(window.location.hash,"")).href;r=r.replace(/url\(\#/g,"url("+e+"#")}SVGMaskUniqueId++,e.element.classList.add(`filepond--image-preview-overlay-${t.status}`),e.element.innerHTML=r.replace(/__UID__/g,SVGMaskUniqueId)},mixins:{styles:["opacity"],animations:{opacity:{type:"spring",mass:25}}}});const r=createImageView(e),{createWorker:a}=e.utils,i=(e,t,r)=>new Promise((i=>{e.ref.imageData||(e.ref.imageData=r.getContext("2d").getImageData(0,0,r.width,r.height));const o=cloneImageData(e.ref.imageData);if(!t||20!==t.length)return r.getContext("2d").putImageData(o,0,0),i();const n=a(ColorMatrixWorker);n.post({imageData:o,colorMatrix:t},(e=>{r.getContext("2d").putImageData(e,0,0),n.terminate(),i()}),[o.data.buffer])})),o=({root:e,props:t,image:a})=>{const i=t.id,o=e.query("GET_ITEM",{id:i});if(!o)return;const n=o.getMetadata("crop")||{center:{x:.5,y:.5},flip:{horizontal:!1,vertical:!1},zoom:1,rotation:0,aspectRatio:null},s=e.query("GET_IMAGE_TRANSFORM_CANVAS_BACKGROUND_COLOR");let c,l,d=!1;e.query("GET_IMAGE_PREVIEW_MARKUP_SHOW")&&(c=o.getMetadata("markup")||[],l=o.getMetadata("resize"),d=!0);const h=e.appendChildView(e.createChildView(r,{id:i,image:a,crop:n,resize:l,markup:c,dirty:d,background:s,opacity:0,scaleX:1.15,scaleY:1.15,translateY:15}),e.childViews.length);e.ref.images.push(h),h.opacity=1,h.scaleX=1,h.scaleY=1,h.translateY=0,setTimeout((()=>{e.dispatch("DID_IMAGE_PREVIEW_SHOW",{id:i})}),250)},n=({root:e})=>{e.ref.overlayShadow.opacity=1,e.ref.overlayError.opacity=0,e.ref.overlaySuccess.opacity=0},s=({root:e})=>{e.ref.overlayShadow.opacity=.25,e.ref.overlayError.opacity=1};return e.utils.createView({name:"image-preview-wrapper",create:({root:e})=>{e.ref.images=[],e.ref.imageData=null,e.ref.imageViewBin=[],e.ref.overlayShadow=e.appendChildView(e.createChildView(t,{opacity:0,status:"idle"})),e.ref.overlaySuccess=e.appendChildView(e.createChildView(t,{opacity:0,status:"success"})),e.ref.overlayError=e.appendChildView(e.createChildView(t,{opacity:0,status:"failure"}))},styles:["height"],apis:["height"],destroy:({root:e})=>{e.ref.images.forEach((e=>{e.image.width=1,e.image.height=1}))},didWriteView:({root:e})=>{e.ref.images.forEach((e=>{e.dirty=!1}))},write:e.utils.createRoute({DID_IMAGE_PREVIEW_DRAW:({root:e})=>{const t=e.ref.images[e.ref.images.length-1];t.translateY=0,t.scaleX=1,t.scaleY=1,t.opacity=1},DID_IMAGE_PREVIEW_CONTAINER_CREATE:({root:e,props:t})=>{const{id:r}=t,a=e.query("GET_ITEM",r);if(!a)return;const i=URL.createObjectURL(a.file);getImageSize(i,((t,a)=>{e.dispatch("DID_IMAGE_PREVIEW_CALCULATE_SIZE",{id:r,width:t,height:a})}))},DID_FINISH_CALCULATE_PREVIEWSIZE:({root:e,props:t})=>{const{id:r}=t,n=e.query("GET_ITEM",r);if(!n)return;const s=URL.createObjectURL(n.file),c=()=>{var e;(e=s,new Promise(((t,r)=>{const a=new Image;a.crossOrigin="Anonymous",a.onload=()=>{t(a)},a.onerror=e=>{r(e)},a.src=e}))).then(l)},l=r=>{URL.revokeObjectURL(s);const a=(n.getMetadata("exif")||{}).orientation||-1;let{width:c,height:l}=r;if(!c||!l)return;a>=5&&a<=8&&([c,l]=[l,c]);const d=Math.max(1,.75*window.devicePixelRatio),h=e.query("GET_IMAGE_PREVIEW_ZOOM_FACTOR")*d,p=l/c,g=e.rect.element.width,u=e.rect.element.height;let m=g,E=m*p;p>1?(m=Math.min(c,g*h),E=m*p):(E=Math.min(l,u*h),m=E/p);const _=createPreviewImage(r,m,E,a),f=()=>{const a=e.query("GET_IMAGE_PREVIEW_CALCULATE_AVERAGE_IMAGE_COLOR")?calculateAverageColor(data):null;n.setMetadata("color",a,!0),"close"in r&&r.close(),e.ref.overlayShadow.opacity=1,o({root:e,props:t,image:_})},I=n.getMetadata("filter");I?i(e,I,_).then(f):f()};if((e=>{const t=window.navigator.userAgent.match(/Firefox\/([0-9]+)\./);return!((t?parseInt(t[1]):null)<=58)&&"createImageBitmap"in window&&isBitmap(e)})(n.file)){const e=a(BitmapWorker);e.post({file:n.file},(t=>{e.terminate(),t?l(t):c()}))}else c()},DID_UPDATE_ITEM_METADATA:({root:e,props:t,action:r})=>{if(!/crop|filter|markup|resize/.test(r.change.key))return;if(!e.ref.images.length)return;const a=e.query("GET_ITEM",{id:t.id});if(a)if(/filter/.test(r.change.key)){const t=e.ref.images[e.ref.images.length-1];i(e,r.change.value,t.image)}else if(/crop|markup|resize/.test(r.change.key)){const r=a.getMetadata("crop"),i=e.ref.images[e.ref.images.length-1];if(r&&r.aspectRatio&&i.crop&&i.crop.aspectRatio&&Math.abs(r.aspectRatio-i.crop.aspectRatio)>1e-5){const r=(({root:e})=>{const t=e.ref.images.shift();return t.opacity=0,t.translateY=-15,e.ref.imageViewBin.push(t),t})({root:e});o({root:e,props:t,image:cloneCanvas(r.image)})}else(({root:e,props:t})=>{const r=e.query("GET_ITEM",{id:t.id});if(!r)return;const a=e.ref.images[e.ref.images.length-1];a.crop=r.getMetadata("crop"),a.background=e.query("GET_IMAGE_TRANSFORM_CANVAS_BACKGROUND_COLOR"),e.query("GET_IMAGE_PREVIEW_MARKUP_SHOW")&&(a.dirty=!0,a.resize=r.getMetadata("resize"),a.markup=r.getMetadata("markup"))})({root:e,props:t})}},DID_THROW_ITEM_LOAD_ERROR:s,DID_THROW_ITEM_PROCESSING_ERROR:s,DID_THROW_ITEM_INVALID:s,DID_COMPLETE_ITEM_PROCESSING:({root:e})=>{e.ref.overlayShadow.opacity=.25,e.ref.overlaySuccess.opacity=1},DID_START_ITEM_PROCESSING:n,DID_REVERT_ITEM_PROCESSING:n},(({root:e})=>{const t=e.ref.imageViewBin.filter((e=>0===e.opacity));e.ref.imageViewBin=e.ref.imageViewBin.filter((e=>e.opacity>0)),t.forEach((t=>((e,t)=>{e.removeChildView(t),t.image.width=1,t.image.height=1,t._destroy()})(e,t))),t.length=0}))})},plugin=e=>{const{addFilter:t,utils:r}=e,{Type:a,createRoute:i,isFile:o}=r,n=createImageWrapperView(e);return t("CREATE_VIEW",(e=>{const{is:t,view:r,query:a}=e;if(!t("file")||!a("GET_ALLOW_IMAGE_PREVIEW"))return;const s=({root:e})=>{e.ref.shouldRescale=!0};r.registerWriter(i({DID_RESIZE_ROOT:s,DID_STOP_RESIZE:s,DID_LOAD_ITEM:({root:e,props:t})=>{const{id:i}=t,s=a("GET_ITEM",i);if(!s||!o(s.file)||s.archived)return;const c=s.file;if(!isPreviewableImage(c))return;if(!a("GET_IMAGE_PREVIEW_FILTER_ITEM")(s))return;const l="createImageBitmap"in(window||{}),d=a("GET_IMAGE_PREVIEW_MAX_FILE_SIZE");if(!l&&d&&c.size>d)return;e.ref.imagePreview=r.appendChildView(r.createChildView(n,{id:i}));const h=e.query("GET_IMAGE_PREVIEW_HEIGHT");h&&e.dispatch("DID_UPDATE_PANEL_HEIGHT",{id:s.id,height:h});const p=!l&&c.size>a("GET_IMAGE_PREVIEW_MAX_INSTANT_PREVIEW_FILE_SIZE");e.dispatch("DID_IMAGE_PREVIEW_CONTAINER_CREATE",{id:i},p)},DID_IMAGE_PREVIEW_CALCULATE_SIZE:({root:e,action:t})=>{e.ref.imageWidth=t.width,e.ref.imageHeight=t.height,e.ref.shouldRescale=!0,e.ref.shouldDrawPreview=!0,e.dispatch("KICK")},DID_UPDATE_ITEM_METADATA:({root:e,action:t})=>{"crop"===t.change.key&&(e.ref.shouldRescale=!0)}},(({root:e,props:t})=>{e.ref.imagePreview&&(e.rect.element.hidden||(e.ref.shouldRescale&&(((e,t)=>{if(!e.ref.imagePreview)return;let{id:r}=t;const a=e.query("GET_ITEM",{id:r});if(!a)return;const i=e.query("GET_PANEL_ASPECT_RATIO"),o=e.query("GET_ITEM_PANEL_ASPECT_RATIO"),n=e.query("GET_IMAGE_PREVIEW_HEIGHT");if(i||o||n)return;let{imageWidth:s,imageHeight:c}=e.ref;if(!s||!c)return;const l=e.query("GET_IMAGE_PREVIEW_MIN_HEIGHT"),d=e.query("GET_IMAGE_PREVIEW_MAX_HEIGHT"),h=(a.getMetadata("exif")||{}).orientation||-1;if(h>=5&&h<=8&&([s,c]=[c,s]),!isBitmap(a.file)||e.query("GET_IMAGE_PREVIEW_UPSCALE")){const e=2048/s;s*=e,c*=e}const p=c/s,g=(a.getMetadata("crop")||{}).aspectRatio||p;let u=Math.max(l,Math.min(c,d));const m=e.rect.element.width,E=Math.min(m*g,u);e.dispatch("DID_UPDATE_PANEL_HEIGHT",{id:a.id,height:E})})(e,t),e.ref.shouldRescale=!1),e.ref.shouldDrawPreview&&(requestAnimationFrame((()=>{requestAnimationFrame((()=>{e.dispatch("DID_FINISH_CALCULATE_PREVIEWSIZE",{id:t.id})}))})),e.ref.shouldDrawPreview=!1)))})))})),{options:{allowImagePreview:[!0,a.BOOLEAN],imagePreviewFilterItem:[()=>!0,a.FUNCTION],imagePreviewHeight:[null,a.INT],imagePreviewMinHeight:[44,a.INT],imagePreviewMaxHeight:[256,a.INT],imagePreviewMaxFileSize:[null,a.INT],imagePreviewZoomFactor:[2,a.INT],imagePreviewUpscale:[!1,a.BOOLEAN],imagePreviewMaxInstantPreviewFileSize:[1e6,a.INT],imagePreviewTransparencyIndicator:[null,a.STRING],imagePreviewCalculateAverageImageColor:[!1,a.BOOLEAN],imagePreviewMarkupShow:[!0,a.BOOLEAN],imagePreviewMarkupFilter:[()=>!0,a.FUNCTION]}}},isBrowser="undefined"!=typeof window&&void 0!==window.document;isBrowser&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin}));export default plugin;
